name: GMLoader-Next Build for Miyoo A30
on:
  workflow_dispatch:
  push:
    branches: [ "master", "main" ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore:
      - '**/README.md'

jobs:
  build-a30:
    runs-on: ubuntu-latest   # pode ser 24.04; o passo abaixo ajeita as fontes pra armhf
    name: Miyoo A30 (ARM Cortex-A7)

    steps:
      - name: Checkout GMLoader-Next
        uses: actions/checkout@v4
        with:
          repository: JohnnyonFlame/gmloader-next
          submodules: recursive

      - name: Prepare apt for armhf on noble (fix 404s)
        run: |
          set -euo pipefail

          # habilita multiarch primeiro
          sudo dpkg --add-architecture armhf || true

          # 1) marca as entradas "noble" existentes para só buscar amd64 nelas,
          #    evitando que apt consulte security.ubuntu.com por armhf (causa 404).
          #    Faz backup (.bak) por segurança.
          sudo grep -q "noble" /etc/apt/sources.list /etc/apt/sources.list.d/*.list 2>/dev/null || true
          sudo bash -c '
          for f in /etc/apt/sources.list /etc/apt/sources.list.d/*.list; do
            [ -f "$f" ] || continue
            # só tocar linhas que contenham "noble" (24.04) e que sejam "deb"
            sudo sed -E -i.bak "/^deb .*noble/{
              /\\[arch=/! s#^deb #deb [arch=amd64] #
            }" "$f" || true
          done
          '

          # 2) adicionar repositório ports para armhf (onde os pacotes armhf existem)
          cat <<'EOF' | sudo tee /etc/apt/sources.list.d/ubuntu-ports-armhf.list
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports noble-backports main restricted universe multiverse
          EOF

          # (Opcional) confiança nas chaves — normalmente o keyring padrão já serve,
          # mas em casos estranhos pode ser preciso instalar ubuntu-keyring:
          sudo apt-get update -y || true

      - name: Install base dependencies + cross libs (amd64 + armhf)
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            git \
            build-essential \
            python3 \
            python3-clang \
            gcc-arm-linux-gnueabihf \
            g++-arm-linux-gnueabihf \
            binutils-arm-linux-gnueabihf \
            libstdc++-10-dev-armhf-cross \
            ca-certificates \
            libsdl2-dev:armhf \
            libzip-dev:armhf \
            zlib1g-dev:armhf

      - name: Build for Miyoo A30
        run: |
          set -euo pipefail
          make -f Makefile.gmloader \
            ARCH=arm-linux-gnueabihf \
            OPTM="-O3 -march=armv7-a -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard" \
            LLVM_FILE=/usr/lib/llvm-11/lib/libclang-11.so.1 \
            LLVM_INC=/usr/arm-linux-gnueabihf/include/c++/10/arm-linux-gnueabihf \
            USE_FMOD=0 \
            -j$(nproc)

      - name: Verify build
        run: |
          if [ -f "build/arm-linux-gnueabihf/gmloader/gmloadernext.armhf" ]; then
            echo "✓ Build successful!"
            file build/arm-linux-gnueabihf/gmloader/gmloadernext.armhf
            ls -lh build/arm-linux-gnueabihf/gmloader/gmloadernext.armhf
          else
            echo "✗ Build failed - binary not found"
            ls -la build/arm-linux-gnueabihf/gmloader/ || echo "Build directory not found"
            exit 1
          fi

      - name: Prepare A30 package
        run: |
          set -euo pipefail
          mkdir -p a30_package/lib
          cp build/arm-linux-gnueabihf/gmloader/gmloadernext.armhf a30_package/gmloadernext.arm-linux-gnueabihf
          chmod +x a30_package/gmloadernext.arm-linux-gnueabihf
          if [ -d "lib/redist" ]; then
            cp -r lib/redist/* a30_package/lib/ 2>/dev/null || true
          fi
          cat > a30_package/gmloader.json << 'EOF'
          {
            "save_dir": "saves",
            "apk_path": "your_game.apk",
            "show_cursor": false,
            "disable_controller": false,
            "disable_joystick": false,
            "force_platform": "os_android"
          }
          EOF
          cat > a30_package/gmloader.sh << 'EOF'
          #!/bin/sh
          cd $(dirname "$0")
          export LD_LIBRARY_PATH=./lib:$LD_LIBRARY_PATH
          ./gmloadernext.arm-linux-gnueabihf -c gmloader.json
          EOF
          chmod +x a30_package/gmloader.sh
          cd a30_package
          tar -czf ../gmloader-miyoo-a30.tar.gz *
          cd ..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gmloadernext_miyoo_a30
          path: |
            build/arm-linux-gnueabihf/gmloader/gmloadernext.armhf
            gmloader-miyoo-a30.tar.gz
            a30_package/

      - name: Create Release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            gmloader-miyoo-a30.tar.gz
            build/arm-linux-gnueabihf/gmloader/gmloadernext.armhf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
